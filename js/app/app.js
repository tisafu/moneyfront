// Generated by CoffeeScript 1.3.3
(function() {
  var HomeView, Item, ItemView, Items, items,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Item = (function(_super) {

    __extends(Item, _super);

    function Item() {
      return Item.__super__.constructor.apply(this, arguments);
    }

    Item.prototype.defaults = function() {
      return {
        content: "content",
        year: (new Date()).getFullYear(),
        month: (new Date()).getMonth() + 1,
        date: (new Date()).getDate(),
        amount: 0.0,
        tags: [],
        create_time: $.now()
      };
    };

    Item.prototype.initialize = function() {
      if (!this.get("content")) {
        this.set("content", this.defaults.content);
      }
      if (!this.get("create_time")) {
        return this.set("create_time", this.defaults.create_time);
      }
    };

    Item.prototype.clear = function() {
      return this.destroy();
    };

    return Item;

  })(Backbone.Model);

  Items = (function(_super) {

    __extends(Items, _super);

    function Items() {
      return Items.__super__.constructor.apply(this, arguments);
    }

    Items.prototype.model = Item;

    Items.prototype.localStorage = new Store("items-backstore");

    return Items;

  })(Backbone.Collection);

  items = new Items();

  ItemView = (function(_super) {

    __extends(ItemView, _super);

    function ItemView() {
      return ItemView.__super__.constructor.apply(this, arguments);
    }

    ItemView.prototype.tagName = "li";

    ItemView.prototype.className = "item";

    ItemView.prototype.template = _.template('<div class="item">' + '<div class="content"></div>' + '<div class="amount"></div>' + '<div class="date"></div>' + '</div>');

    ItemView.prototype.initialize = function() {
      this.model.bind('change', this.render, this);
      return this.model.bind('destroy', this.remove, this);
    };

    ItemView.prototype.render = function() {
      this.$el.html(this.template(this.model.toJSON()));
      return this;
    };

    ItemView.prototype.clear = function() {
      return this.model.clear();
    };

    return ItemView;

  })(Backbone.View);

  HomeView = (function(_super) {

    __extends(HomeView, _super);

    function HomeView() {
      return HomeView.__super__.constructor.apply(this, arguments);
    }

    HomeView.prototype.initialize = function() {
      this.input = this.$('new_content');
      items.bind('add', this.addOne, this);
      return items.fetch();
    };

    HomeView.prototype.render = function() {
      alert("herew1");
      return this;
    };

    HomeView.prototype.addOne = function(new_item) {
      var view;
      alert("here");
      view = new ItemView({
        model: new_item
      });
      return this.$('#items').append(view.render().el);
    };

    HomeView.prototype.createOnEnter = function(e) {
      if (e.keyCode(!13)) {
        return;
      }
      if (!this.input.val()) {
        return;
      }
      return items.create({
        content: this.input.val()
      });
    };

    return HomeView;

  })(Backbone.View);

  window.App = new HomeView();

}).call(this);
